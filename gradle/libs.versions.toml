[versions]
kotlin = "1.9.25"
spring-boot = "3.5.4"
spring-dependency-management = "1.1.7"
spring-cloud = "2024.0.0"
querydsl = "5.0.0"
kotest = "5.8.0"
mockk = "1.13.8"
instancio = "3.7.1"
archunit = "1.2.1"
logback = "1.4.14"
mysql = "8.0.33"
h2 = "2.2.224"
redis = "3.1.5"

[libraries]
# Kotlin
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlin-test-junit5 = { module = "org.jetbrains.kotlin:kotlin-test-junit5", version.ref = "kotlin" }

# Spring Boot
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web" }
spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
spring-boot-starter-data-redis = { module = "org.springframework.boot:spring-boot-starter-data-redis" }
spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test" }

# Spring Cloud
spring-cloud-starter-openfeign = { module = "org.springframework.cloud:spring-cloud-starter-openfeign" }
spring-cloud-starter-circuitbreaker-resilience4j = { module = "org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j" }

# Jackson
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin" }

# QueryDSL
querydsl-jpa = { module = "com.querydsl:querydsl-jpa", version.ref = "querydsl" }
querydsl-apt = { module = "com.querydsl:querydsl-apt", version.ref = "querydsl" }

# Database
mysql-connector = { module = "mysql:mysql-connector-java", version.ref = "mysql" }
h2-database = { module = "com.h2database:h2", version.ref = "h2" }

# OpenAPI
springdoc-openapi-starter-webmvc-ui = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version = "2.3.0" }

# Kafka
spring-kafka = { module = "org.springframework.kafka:spring-kafka" }
spring-kafka-test = { module = "org.springframework.kafka:spring-kafka-test" }

# Logging
kotlin-logging = { module = "io.github.microutils:kotlin-logging-jvm", version = "3.0.5" }

# Test
kotest-runner-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-extensions-spring = { module = "io.kotest:kotest-extensions-spring", version.ref = "kotest" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
instancio-junit = { module = "org.instancio:instancio-junit", version.ref = "instancio" }
archunit-junit5 = { module = "com.tngtech.archunit:archunit-junit5", version.ref = "archunit" }

# JUnit
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher" }

[bundles]
spring-boot-web = ["spring-boot-starter-web", "spring-boot-starter-actuator", "spring-boot-starter-validation"]
spring-boot-data = ["spring-boot-starter-data-jpa", "spring-boot-starter-data-redis"]
spring-cloud = ["spring-cloud-starter-openfeign", "spring-cloud-starter-circuitbreaker-resilience4j"]
querydsl = ["querydsl-jpa"]
kafka = ["spring-kafka"]
database = ["mysql-connector", "h2-database"]
kotest = ["kotest-runner-junit5", "kotest-assertions-core", "kotest-extensions-spring"]
test = ["spring-boot-starter-test", "kotlin-test-junit5", "mockk", "instancio-junit", "archunit-junit5"]

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlin-jpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "spring-dependency-management" }
